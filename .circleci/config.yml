version: 2

setup: &setup
  parallelism: 1
  docker:
    - image: circleci/ruby:2.5.0-node
      environment:
        BUNDLE_JOBS: 1
        BUNDLE_RETRY: 1
        BUNDLE_PATH: vendor/bundle
        RAILS_ENV: test
        CI: true
    - image: circleci/postgres:10.1-alpine-ram
      environment:
        POSTGRES_USER: postgres
        POSTGRES_DB: some_schedules_test
        POSTGRES_PASSWORD: postgres

workflows:
  version: 2
  build:
    jobs:
      - branch
      - merge:
          filters:
              branches:
                ignore:
                  - master

jobs:
  branch:
    <<: *setup
    working_directory: ~/repo-branch

    steps:
      - checkout

      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
            - bundle-

      - run:
          name: bundle install
          command: bundle check || bundle install

      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - yarn-{{ checksum "client/yarn.lock" }}
            - yarn-

      - run:
          name: yarn install
          command: (cd client && yarn install --cache-folder ~/repo-branch/.cache/yarn)

      - save_cache:
          key: yarn-{{ checksum "client/yarn.lock" }}
          paths:
            - ~/repo-branch/.cache/yarn

      - run:
          name: rubocop
          command: bin/rubocop -D

      - run:
          name: yarn lint
          command: (cd client && yarn lint)

      - run:
          name: wait for postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: set up database
          command: bin/rails db:setup

      - run:
          name: rspec
          command: bin/rspec

      - run:
          name: start rails server
          command: bin/rails s -d -p 5000

      - run:
          name: yarn test
          command: (cd client && yarn test)

  merge:
    <<: *setup
    working_directory: ~/repo-merge

    steps:
      - checkout

      - run:
          name: merge branch into master
          command: |
            git pull --ff-only origin "refs/pull/${CI_PULL_REQUEST//*pull\//}/merge"

      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
            - bundle-

      - run:
          name: bundle install
          command: bundle check || bundle install

      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - yarn-{{ checksum "client/yarn.lock" }}
            - yarn-

      - run:
          name: yarn install
          command: (cd client && yarn install --cache-folder ~/repo-merge/.cache/yarn)

      - save_cache:
          key: yarn-{{ checksum "client/yarn.lock" }}
          paths:
            - ~/repo-merge/.cache/yarn

      - run:
          name: rubocop
          command: bin/rubocop -D

      - run:
          name: yarn lint
          command: (cd client && yarn lint)

      - run:
          name: wait for postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: set up database
          command: bin/rails db:setup

      - run:
          name: rspec
          command: bin/rspec

      - run:
          name: start rails server
          command: bin/rails s -d -p 5000

      - run:
          name: yarn test
          command: (cd client && yarn test)
